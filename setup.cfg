##########################
# Setup.py Configuration #
##########################
[metadata]
name = upf_tools
version = 0.1.9-dev
description = Tools for handling .upf (Unified Pseudopotential Format) files
long_description = file: README.md
long_description_content_type = text/markdown

# URLs associated with the project
url = https://github.com/pseudopotential-tools/upf-tools
download_url = https://github.com/pseudopotential-tools/upf-tools/releases
project_urls =
    Bug Tracker = https://github.com/pseudopotential-tools/upf-tools/issues
    Source Code = https://github.com/pseudopotential-tools/upf-tools

# Author information
author = Edward Linscott
author_email = edwardlinscott@gmail.com
maintainer = Edward Linscott
maintainer_email = edwardlinscott@gmail.com

# License Information
license = MIT
license_files =
    LICENSE

# Search tags
classifiers =
    Development Status :: 1 - Planning
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Framework :: Pytest
    Framework :: tox
    Framework :: Sphinx
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3 :: Only
    # TODO add your topics from the Trove controlled vocabulary (see https://pypi.org/classifiers)
keywords =
    snekpack
    cookiecutter
    # TODO add your own free-text keywords

[options]
install_requires =
    more_itertools
    tqdm
    click
    more_click
    numpy
    packaging
    typing
    defusedxml
    matplotlib
    oncvpsp-tools

# Random options
zip_safe = false
include_package_data = True
python_requires = >=3.8

# Where is my code
packages = find:
package_dir =
    = src

[options.packages.find]
where = src

[options.extras_require]
tests =
    pytest
    coverage
docs =
    sphinx < 7.0
    sphinx-rtd-theme
    sphinx-click
    sphinx-autodoc-typehints
    sphinx_automodapi
    # To include LaTeX comments easily in your docs. 
    # If you uncomment this, don't forget to do the same in docs/conf.py
    # texext


[options.entry_points]
console_scripts =
    upf-tools = upf_tools.cli:main


######################
# Doc8 Configuration #
# (doc8.ini)         #
######################
[doc8]
max-line-length = 120

##########################
# Coverage Configuration #
# (.coveragerc)          #
##########################
[coverage:run]
branch = True
source = upf_tools
omit =
    tests/*
    docs/*

[coverage:paths]
source =
    src/upf_tools
    .tox/*/lib/python*/site-packages/upf_tools

[coverage:report]
show_missing = True
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    if __name__ == "__main__":
    if TYPE_CHECKING:
    def __str__
    def __repr__

##########################
# Darglint Configuration #
##########################
[darglint]
docstring_style = sphinx
strictness = short

#########################
# Flake8 Configuration  #
# (.flake8)             #
#########################
[flake8]
ignore =
    # __init__ does not need a docstring
    D107
    # assert (used in tests)
    S101
    # pickle
    S301
    # pickle
    S403
    S404
    S603
    # Line break before binary operator (flake8 is wrong)
    W503
    # whitespace before ':'
    E203
    # ambiguous variable names
    E741
exclude =
    .tox,
    .git,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    tests/fixtures/*,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs,
    data
max-line-length = 120
max-complexity = 20
import-order-style = pycharm
application-import-names =
    upf_tools
    tests

##########################
# pytest Configuration   #
# (.pytest.ini)          #
##########################
[tool:pytest]
filterwarnings = 
    ignore:Could not determine the UPF version. Assuming v1.0.0:UserWarning
